// This is an autogenerated file from Firebase Studio.
"use client";

import { useState, useMemo } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, Bug, ShieldCheck, TreePine, MapPin, Info, ShieldAlert } from 'lucide-react';
import { allPestForecasts, PestForecastData, ProvinceForecast, Pest } from '@/data/pest-forecast-data';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { cn } from '@/lib/utils';

const RiskIcon = ({ riskLevel }: { riskLevel: Pest['riskLevel'] }) => {
    switch (riskLevel) {
        case 'cao':
            return <ShieldAlert className="h-5 w-5 text-destructive flex-shrink-0" />;
        case 'trung bình':
            return <Bug className="h-5 w-5 text-yellow-500 flex-shrink-0" />;
        case 'thấp':
            return <ShieldCheck className="h-5 w-5 text-green-500 flex-shrink-0" />;
        default:
            return <Bug className="h-5 w-5 text-muted-foreground flex-shrink-0" />;
    }
};

export function PestForecast() {
    const [selectedProvince, setSelectedProvince] = useState<ProvinceForecast | null>(null);
    
    const currentMonth = new Date().getMonth() + 1; // 1-12
    
    const upcomingForecasts = useMemo(() => {
        if (!selectedProvince) return [];
        const forecasts: PestForecastData[] = [];
        for (let i = 0; i < 3; i++) {
            let month = currentMonth + i;
            if (month > 12) month -= 12;
            const forecast = selectedProvince.monthlyForecasts.find(f => f.month === month);
            if (forecast) {
                forecasts.push(forecast);
            }
        }
        return forecasts;
    }, [selectedProvince, currentMonth]);

    const [selectedMonth, setSelectedMonth] = useState<PestForecastData | null>(null);

    const handleProvinceChange = (provinceName: string) => {
        const province = allPestForecasts.find(p => p.provinceName === provinceName) || null;
        setSelectedProvince(province);
        // Automatically select the first upcoming month's forecast if available
        if (province) {
            const firstUpcoming = getUpcomingForecasts(province, currentMonth)[0];
            setSelectedMonth(firstUpcoming || null);
        } else {
            setSelectedMonth(null);
        }
    }

    // Helper function to get upcoming forecasts for a province
    const getUpcomingForecasts = (province: ProvinceForecast, startMonth: number): PestForecastData[] => {
        const forecasts: PestForecastData[] = [];
        for (let i = 0; i < 3; i++) {
            let month = startMonth + i;
            if (month > 12) month -= 12;
            const forecast = province.monthlyForecasts.find(f => f.month === month);
            if (forecast) {
                forecasts.push(forecast);
            }
        }
        return forecasts;
    }

    // Effect to update selected month when upcoming forecasts change
    useMemo(() => {
        if (upcomingForecasts.length > 0) {
            // Check if the currently selected month is still valid
            if (!selectedMonth || !upcomingForecasts.some(f => f.month === selectedMonth.month)) {
                setSelectedMonth(upcomingForecasts[0]);
            }
        } else {
            setSelectedMonth(null);
        }
    }, [upcomingForecasts, selectedMonth]);

    return (
        <section>
            <h2 className="text-2xl md:text-3xl font-bold text-center mb-2 font-headline">Lịch dự báo sâu bệnh</h2>
            <p className="text-muted-foreground text-center text-sm md:text-base mb-8 max-w-2xl mx-auto">
                Chọn tỉnh thành của bạn để xem dự báo các loại sâu bệnh hại chính. Chủ động phòng ngừa để bảo vệ mùa màng.
            </p>
            <Card className="shadow-lg">
                <CardContent className="p-4 md:p-6 grid grid-cols-1 lg:grid-cols-3 gap-6">
                    <div className="lg:col-span-1 space-y-4">
                        <div>
                            <h3 className="font-semibold text-lg mb-3 flex items-center gap-2"><MapPin className="text-accent" /> Chọn khu vực</h3>
                             <Select onValueChange={handleProvinceChange} value={selectedProvince?.provinceName}>
                                <SelectTrigger>
                                    <SelectValue placeholder="Chọn tỉnh thành của bạn" />
                                </SelectTrigger>
                                <SelectContent>
                                    {allPestForecasts.map(p => (
                                        <SelectItem key={p.provinceName} value={p.provinceName}>{p.provinceName}</SelectItem>
                                    ))}
                                </SelectContent>
                            </Select>
                        </div>
                        {selectedProvince && (
                            <div>
                                <h3 className="font-semibold text-lg mb-3 flex items-center gap-2"><Calendar className="text-accent" /> Tháng dự báo</h3>
                                <div className="space-y-2">
                                    {upcomingForecasts.length > 0 ? upcomingForecasts.map((forecast) => (
                                        <button
                                            key={forecast.month}
                                            onClick={() => setSelectedMonth(forecast)}
                                            className={cn(
                                                "w-full text-left p-3 rounded-lg border transition-colors flex justify-between items-center",
                                                selectedMonth?.month === forecast.month
                                                    ? "bg-primary/10 ring-2 ring-primary border-primary"
                                                    : "hover:bg-muted/50"
                                            )}
                                        >
                                            <span className="font-semibold">{forecast.monthName}</span>
                                            <Badge variant="secondary">{forecast.forecasts.length} dự báo</Badge>
                                        </button>
                                    )) : (
                                        <div className="text-center text-sm text-muted-foreground p-4 border rounded-lg">Không có dự báo cho các tháng tới.</div>
                                    )}
                                </div>
                            </div>
                        )}
                    </div>
                    <div className="lg:col-span-2">
                        {selectedMonth && selectedProvince ? (
                             <div className="sticky top-4">
                                <h3 className="font-semibold text-lg mb-3">Chi tiết dự báo cho {selectedMonth.monthName} tại {selectedProvince.provinceName}</h3>
                                <Accordion type="single" collapsible defaultValue={selectedMonth.forecasts.length > 0 ? selectedMonth.forecasts[0].name : undefined} className="w-full">
                                    {selectedMonth.forecasts.map((pest) => (
                                        <AccordionItem value={pest.name} key={pest.name}>
                                            <AccordionTrigger>
                                                <div className="flex items-center gap-2 text-left">
                                                    <RiskIcon riskLevel={pest.riskLevel} />
                                                    <span className="font-semibold">{pest.name}</span>
                                                </div>
                                            </AccordionTrigger>
                                            <AccordionContent className="space-y-4 pt-2 pl-2">
                                                <p className="text-sm text-foreground/90">{pest.description}</p>
                                                <div>
                                                    <h4 className="font-semibold text-sm mb-2 flex items-center gap-2"><TreePine className="h-4 w-4 text-emerald-500" /> Cây trồng bị ảnh hưởng:</h4>
                                                     <div className="flex flex-wrap gap-2">
                                                        {pest.affectedCrops.map((crop, i) => <Badge key={i} variant="outline">{crop}</Badge>)}
                                                    </div>
                                                </div>
                                                <div>
                                                    <h4 className="font-semibold text-sm mb-2 flex items-center gap-2"><ShieldCheck className="h-4 w-4 text-sky-500" /> Biện pháp phòng ngừa:</h4>
                                                    <ul className="list-disc list-inside text-sm text-foreground/90 space-y-1">
                                                        {pest.prevention.map((p, i) => <li key={i}>{p}</li>)}
                                                    </ul>
                                                </div>
                                            </AccordionContent>
                                        </AccordionItem>
                                    ))}
                                </Accordion>
                            </div>
                        ) : (
                            <div className="flex flex-col items-center justify-center h-full bg-muted rounded-lg p-8 text-center min-h-[300px]">
                                <div className="flex items-center gap-4 text-muted-foreground mb-4">
                                  <MapPin className="h-10 w-10"/>
                                  <Calendar className="h-10 w-10"/>
                                  <Bug className="h-10 w-10"/>
                                </div>
                                <p className="font-semibold text-lg">Bắt đầu bằng cách chọn tỉnh thành</p>
                                <p className="text-sm text-muted-foreground mt-1">Chọn một tỉnh từ danh sách để xem chi tiết dự báo sâu bệnh cho khu vực của bạn.</p>
                            </div>
                        )}
                    </div>
                </CardContent>
            </Card>
            <p className="text-xs text-muted-foreground text-center mt-4">
                *Dữ liệu dự báo được tổng hợp và phân tích từ các báo cáo của Cục Bảo vệ Thực vật và các nguồn tin nông nghiệp uy tín.
            </p>
        </section>
    );
}
